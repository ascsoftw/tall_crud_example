<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Dashboard') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 bg-white border-b border-gray-200">
                    <p>This Application shows how the examples of the Components Generated by <a href="https://github.com/ascsoftw/tall-crud-generator" class="cursor-pointer text-blue-500">Tall Crud Generator Package</a>. All the Menus have Livewire Components which have been generated by this Package.</p>

                    <p class="mt-4">The Package itself can be accessed at <a href="{{route('crud-generator')}}" class="cursor-pointer text-blue-500">Crud Generator Menu</a>. You can check this Video on <a href="https://youtu.be/4b9D9RIjTwk" class="cursor-pointer text-blue-500">Youtube</a> which shows how to install this Package.</p>

                    <p class="mt-4">Following are the Exmamples generated by the Pakcage:</p>

                    <h3 class="mt-4 text-lg font-bold"><a href="{{route('simple-pagination')}}" class="cursor-pointer text-blue-500">Simple Pagination</a></h3>
                    <p class="mt-4">
                        This is one of the simplest example of the Tall Crud Generator Package. It is a standalone component which supports Pagination, Searching and Sorting. 
                    </p>

                    <h3 class="mt-4 text-lg font-bold"><a href="{{route('eager-load')}}" class="cursor-pointer text-blue-500">Eager Load</a></h3>
                    <p class="mt-4">
                        In this example, we see how we can Eager Load a Related Model. Eager Loading a Related Model avoids the N+1 Problem.
                    </p>
                    
                    <h3 class="mt-4 text-lg font-bold"><a href="{{route('eager-load-count')}}" class="cursor-pointer text-blue-500">Eager Load Count</a></h3>
                    <p class="mt-4">
                        In this example, we see how we can Eager Load Count of a Related Model. We also give User the option to Sort using the Count Column.
                    </p>

                    <h3 class="mt-4 text-lg font-bold"><a href="{{route('delete-modal')}}" class="cursor-pointer text-blue-500">Delete Modal</a></h3>
                    <p class="mt-4">
                        In this example, we see how we can Delete a particular Record. Confirmation Modal Dialog appears prompting User to Confirm whether he wants to Delete a Record. 
                    </p>

                    <h3 class="mt-4 text-lg font-bold"><a href="{{route('add-edit-form')}}" class="cursor-pointer text-blue-500">Add Edit Form</a></h3>
                    <p class="mt-4">
                        In this example, we see how we can create a Component which allows the User to Add as well as Edit a Record. User can also set Validation for each Field. This example also supports saving a BelongsTo Field
                    </p>


                    <h3 class="mt-4 text-lg font-bold"><a href="{{route('belongs-to-many-form')}}" class="cursor-pointer text-blue-500">Belongs to Many Form</a></h3>
                    <p class="mt-4">
                        This is similar to the above Add Edit Form. Howerver, this also shows how to Add / Edit a BelongsToMany Field.
                    </p>

                    <h3 class="mt-4 text-lg font-bold">Button Text</h3>
                    <p class="mt-4">
                        The Package also allows you to change the Text of Various Buttons. You can do this from the Step 6 of the Package Config Page. You can check this Video on <a href="https://youtu.be/SrTIb3E9Tl4" class="cursor-pointer text-blue-500">Youtube</a> which shows this feature.</a>
                    </p> 
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
